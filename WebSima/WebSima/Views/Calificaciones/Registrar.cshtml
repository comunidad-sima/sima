@{ ViewBag.Title = "home"; }
<style>
    .negative {
        color: red;
    }
    .error {
        color: #E67E22;
    }
</style>
<div>
    <ol class="breadcrumb " style="background-color: #ffffff">
        <li class="breadcrumb-item ">Calificaciones</li>
        <li class="breadcrumb-item active">Registrar</li>
    </ol>
</div>

<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title">Nota del estudiante</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
        <!-- /.box-tools -->
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        <div class="panelBorder">
            <div class="row">
                <div class=" col-sm-12 col-md-4  col-lg-6">
                    <a href="#" class="btn btn-success right">Descargar plantilla</a>
                </div>
                <div class="  col-sm-12 col-md-8 col-lg-6">

                    <form method="POST" action="#">
                        <!-- COMPONENT START -->
                        <div class="form-group">
                            <div class="input-group input-file">
                                <span class="input-group-btn">
                                    <button class="btn btn-success btn-choose" type="button">Cargar Archivo</button>
                                </span>
                                <input type="text" class="form-control" placeholder='Choose a file...' />
                                <span class="input-group-btn">
                                    <button class="btn btn-success " type="submit">Enviar</button>
                                </span>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-sm-12">
                    <hr />
                </div>
                <div class="col-sm-12" id="alert_1"></div>
                <div class="col-sm-12">
                    <div id="notas" class="handsontable  "></div>
                </div>
               <br />
                <div style="padding:12px" class="col-sm-12">
                    <p>
                        <button class="btn btn-success" name="dump" data-dump="#notas" id="guardar_nota" title="Enviar datos">
                            Guardar
                        </button>
                    </p>
                </div>
            </div>

        </div>
    </div>
    <!-- /.box-body -->
</div>
<script>

    $(document).ready(function () {
        bs_input_file();        
        bindDumpButton();
        var data = [
          ["Identificación", "Nombre", "Taller", "Quiz", "Trabajo"],
          ["1102230202", "Fredys Jose Vergara Cardenas1", 3, 2, 5],
          ["2034534098", "Fredys Jose Vergara Cardenas2", 0, (3.7), 3]          
        ];

        $.ajax({
            //data: "",
            url: "/Calificaciones/CaligicacionesRegistro/-1",
            dataType: "json",
            type: 'post',
            beforeSend: function () { },
            success: function (response) {
                data = response;
                cargarTablaNota(data);
                console.log(response);
            }, error: function (error) {
                alert("Error al cargar los datos");
               
            }
        });

             

    });
    function bindDumpButton() {
        $('body').on('click', 'button[name=dump]', function () {
            var dump = $(this).data('dump');
            var $container = $(dump);
            var datos = {
                "dato_nota": $container.handsontable('getData'),
                // "id_prueba": "Prueba"                    
            }
            //var datos = $container.handsontable('getData');
            var btn = $("#guardar_nota");
            btn.val("Guardando...");
            btn.prop("disabled", true);
            /// se envian las notas 
            $.ajax({
                data: datos,
                url: "/Calificaciones/Guardar",
                dataType: "json",
                type: 'post',
                beforeSend: function () { },
                success: function (response) {
                    var mensaje = "";
                    var clase = "";
                    if (response["RESPUESTA"] == "OK") {
                        mensaje = response["MENSAJE"];
                        clase = "alert-success";
                        location.href = "/Calificaciones/Registrar";

                    } else if (response["RESPUESTA"] == "ERROR") {
                        mensaje = response["MENSAJE"];
                        clase = "alert-danger";
                    }
                    btn.prop("disabled", false);
                    //alert_mensajes() esta en helper.js
                    $("#alert_1").html(alert_mensajes(mensaje, clase));
                    // se activa el boton enviar
                    btn.val("Guardar");
                }, error: function (error) {
                    alert("Error");
                    btn.val("Guardar");
                    btn.prop("disabled", false);
                }
            });
            //console.log('data of ' + dump, $container.handsontable('getData'));
        });
    }
    function cargarTablaNota(data) {
        var container = $("#notas");
        container.handsontable({
            data: data,
            startRows: 20,
            startCols: 20,
            minSpareRows: 1,
            minSpareCols: 1,
            colWidths: [80, 220],
            manualColumnResize: true,
            rowHeaders: true,
            colHeaders: true,
            contextMenu: true,
            onSelection: function (row, col, row2, col2) {
                var meta = container.handsontable('getCellMeta', row2, col2);
                if (meta.isWritable == false) {
                    container.handsontable('updateSettings', { fillHandle: false });
                }
                else {
                    container.handsontable('updateSettings', { fillHandle: true });
                }
            },
            cells: function (row, col, prop) {
                var cellProperties = {};
                if (col === 20000/* || container.handsontable('getData')[row][col] === 'readOnly'*/) {
                    cellProperties.readOnly = true; //make cell read-only if it is first row or the text reads 'readOnly'
                }
                cellProperties.type = {
                    renderer: negativeValueRenderer
                }
                return cellProperties;
            }
        });
    }
    function negativeValueRenderer(instance, td, row, col, prop, value, cellProperties) {
        Handsontable.TextCell.renderer.apply(this, arguments);
        if (parseFloat(value, 10) < 3) { //if row contains negative number
            td.className = 'negative'; //add class "negative"
        }
        else if (col != 0 && (parseFloat(value, 10) < 0 || parseFloat(value, 10) > 5)) { //if row contains negative number
            td.className = 'error'; //add class "negative"
        }
        else {
            td.className = '';
        }
        if (row === 0) {
            td.style.fontWeight = 'bold';
            td.style.color = 'green';
        }
        if (cellProperties.readOnly) {
            td.style.opacity = 0.7;
        }
        //if (value === 'Nissan') {
        //    td.style.fontStyle = 'italic';
        //}

        if (!value || value === '') {
            td.style.background = '#EEE';
        }
        else {
            td.style.background = '';
        }
    }
    function bs_input_file() {
        // codigo input file
        $(".input-file").before(
          function () {
              if (!$(this).prev().hasClass('input-ghost')) {
                  var element = $("<input type='file' class='input-ghost' style='visibility:hidden; height:0'>");
                  element.attr("name", $(this).attr("name"));
                  element.change(function () {
                      element.next(element).find('input').val((element.val()).split('\\').pop());
                  });
                  $(this).find("button.btn-choose").click(function () {
                      element.click();
                  });

                  $(this).find('input').css("cursor", "pointer");
                  $(this).find('input').mousedown(function () {
                      $(this).parents('.input-file').prev().click();
                      return false;
                  });
                  return element;
              }
          }
        );
    }
</script>


