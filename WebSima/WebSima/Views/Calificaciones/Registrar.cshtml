@{ ViewBag.Title = "home"; }
<style>
    .negative {
        color: red;
    }
</style>
<div>
    <ol class="breadcrumb " style="background-color: #ffffff">
        <li class="breadcrumb-item ">Calificaciones</li>
        <li class="breadcrumb-item active">Registrar</li>
    </ol>
</div>

<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title">Nota del estudiante</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
        <!-- /.box-tools -->
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        <div class="panelBorder">
            <div class="row">
                <div class=" col-sm-12 col-md-4  col-lg-6">
                    <a href="#" class="btn btn-success right">Descargar plantilla</a>
                </div>
                <div class="  col-sm-12 col-md-8 col-lg-6">

                    <form method="POST" action="#">
                        <!-- COMPONENT START -->
                        <div class="form-group">
                            <div class="input-group input-file">
                                <span class="input-group-btn">
                                    <button class="btn btn-success btn-choose" type="button">Cargar Archivo</button>
                                </span>
                                <input type="text" class="form-control" placeholder='Choose a file...' />
                                <span class="input-group-btn">
                                    <button class="btn btn-success " type="submit">Enviar</button>
                                </span>
                            </div>



                        </div>
                    </form>
                </div>
                <div class="col-sm-12">
                    <hr />
                </div>

                <div class="col-sm-12">
                    <div id="notas" class="handsontable  "></div>
                </div>
               <br />
                <div style="padding:12px" class="col-sm-12">
                    <p>
                        <button class="btn btn-success" name="dump" data-dump="#notas" title="Enviar datos">
                            Guargar
                        </button>
                    </p>
                </div>
            </div>

        </div>
    </div>
    <!-- /.box-body -->
</div>


<script>



    // codigo input file

    function bs_input_file() {
        $(".input-file").before(
          function () {
              if (!$(this).prev().hasClass('input-ghost')) {
                  var element = $("<input type='file' class='input-ghost' style='visibility:hidden; height:0'>");
                  element.attr("name", $(this).attr("name"));
                  element.change(function () {
                      element.next(element).find('input').val((element.val()).split('\\').pop());
                  });
                  $(this).find("button.btn-choose").click(function () {
                      element.click();
                  });

                  $(this).find('input').css("cursor", "pointer");
                  $(this).find('input').mousedown(function () {
                      $(this).parents('.input-file').prev().click();
                      return false;
                  });
                  return element;
              }
          }
        );
    }
    $(function () {
        bs_input_file();
    });




    $(document).ready(function () {

        function bindDumpButton() {
            $('body').on('click', 'button[name=dump]', function () {
                var dump = $(this).data('dump');
                var $container = $(dump);
                console.log('data of ' + dump, $container.handsontable('getData'));
            });
        }
        bindDumpButton();

        function negativeValueRenderer(instance, td, row, col, prop, value, cellProperties) {
            Handsontable.TextCell.renderer.apply(this, arguments);
            if (parseInt(value, 10) < 3) { //if row contains negative number
                td.className = 'negative'; //add class "negative"
            }
            else {
                td.className = '';
            }
            if (row === 0) {
                td.style.fontWeight = 'bold';
                td.style.color = 'green';
            }
            if (cellProperties.readOnly) {
                td.style.opacity = 0.7;
            }
            if (value === 'Nissan') {
                td.style.fontStyle = 'italic';
            }

            if (!value || value === '') {
                td.style.background = '#EEE';
            }
            else {
                td.style.background = '';
            }
        }

        var data = [
          ["Identificación", "Nombre", "Nissan", "Toyota", "Honda"],
          ["1102230202", "Fredys Jose Vergara Cardenas", 11, 12, 13],
          ["203453409", 20, -11, 14, 13],
          ["45464565", 30, 15, -12, "readOnly"],
           ["45654633", 30, 15, "hhhh"]
        ];

        var container = $("#notas");
        container.handsontable({
            data: data,
            startRows: 20,
            startCols: 20,
            minSpareRows: 1,
            minSpareCols: 1,
            colWidths: [80, 180],
            manualColumnResize: true,
            rowHeaders: true,
            colHeaders: true,
            contextMenu: true,
            onSelection: function (row, col, row2, col2) {
                var meta = container.handsontable('getCellMeta', row2, col2);
                if (meta.isWritable == false) {
                    container.handsontable('updateSettings', { fillHandle: false });
                }
                else {
                    container.handsontable('updateSettings', { fillHandle: true });
                }
            },
            cells: function (row, col, prop) {
                var cellProperties = {};
                if (row === 0 || col === 0 || container.handsontable('getData')[row][col] === 'readOnly') {
                    cellProperties.readOnly = true; //make cell read-only if it is first row or the text reads 'readOnly'
                }
                cellProperties.type = {
                    renderer: negativeValueRenderer
                }
                return cellProperties;
            }
        });

    });
</script>


