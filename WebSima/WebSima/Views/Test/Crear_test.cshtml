@model WebSima.Models.MTest

@{
    ViewBag.Title = "Crear_test";
    List<WebSima.Models.MPreguntas_test> preguntas =   ViewBag.preguntas;
}

<div>
    <ol class="breadcrumb " style="background-color: #ffffff">
        <li class="breadcrumb-item ">Crear Test</li>
        <li class="breadcrumb-item active">Test</li>

    </ol>
</div>
@using (Html.BeginForm("Crear", "Test", FormMethod.Post, new {  id="fDatos_nuevo_test" }))
            {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
<div class="box box-success">
    <div class="box-header with-border">
        <div class="box-header with-border panelBorder ">
            <div id="alert_1"></div>
            <div class="form-group col-sm-4">
                <h4>
                    @Html.LabelFor(model => model.ferfil_usuario)
               </h4>
                <div class="input-group date">
                    <label>
                        <input class="flat-red " type="radio" value="Estudiante" id="ferfil_usuario" checked name="ferfil_usuario" />
                        
                        Estudiantes
                    </label>
                    
                    <br />

                    <label>
                        <input class="flat-red " type="radio" value="Docente" id="ferfil_usuario" name="ferfil_usuario" />
                        Docentes
                    </label>
                 
                </div>
                @Html.ValidationMessageFor(model => model.ferfil_usuario, null, new { @class = "label label-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.fecha_inicio)
                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                  
                    @Html.TextBoxFor(model => model.fecha_inicio, new { @class = "form-control datepicker " })
                    @Html.ValidationMessageFor(model => model.fecha_inicio, null, new { @class = "label label-danger"})

                </div>
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.fecha_fin)
                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(model => model.fecha_fin, new { @class = "form-control datepicker " })
                    @Html.ValidationMessageFor(model => model.fecha_fin, null, new { @class = "label label-danger" })

                </div>
            </div>
      
            <!-- segundo despligue -->
            <div class="col-sm-12">
                <br />
                <h3>Seleccione las preguntas que se deben responder en el test</h3>

                <table class="table tablaPaginacion table-responsive table-hover">

                    <tbody>
                        @foreach (var pregunta in preguntas.OrderByDescending(x=>x.tipo))
                        {
                            <tr>
                                <td style="width:20px">
                                @if (pregunta.tipo.Equals("Abierta")) { 
                                 <i class="fa  fa-unlock" title="Esta pregunta es abierta"></i>
                                }
                                else if (pregunta.tipo.Equals("Cerrada"))
                                {
                                    <i class="fa   fa-unlock-alt" title="Esta pregunta es cerrada"></i>
                                }
                                </td>
                                

                                <td style="width:20px">
                                    <input type="checkbox" name="id_preguntas" value="@pregunta.id" class="flat-red">
                                </td>
                                <td>@pregunta.Pregunata </td>

                            </tr>
                        }
                    </tbody>
                </table>

                <button type="submit" id="enviar" class="btn btn-success"><i class="fa fa-floppy-o"></i>  Enviar </button>


            </div>

        </div>

    </div>
</div>
}
<script>
    $(function () {
        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });
        configurar_daterangepicker("datepicker");
        $("#fecha_inicio").val("");
        $("#fecha_fin").val("");

        $.validator.unobtrusive.parse("#fDatos_nuevo_test");// se activan las validaciones del formulario

        $("#fDatos_nuevo_test").submit(function (e) {
            e.preventDefault();
            if ($("#fDatos_nuevo_test").valid()) {
                var datos = $("#fDatos_nuevo_test").serializeArray();
                var btn = $("#enviar");
                btn.val("Guardando...");
                btn.prop("disabled", true);
                $.ajax({
                    data: datos,
                    url: $("#fDatos_nuevo_test").attr('action'),
                    dataType: "json",
                    type: 'post',
                    beforeSend: function () { },
                    success: function (response) {

                        // se activa el boton enviar
                        btn.val("Guardar");
                        btn.prop("disabled", false);

                        var mensaje = "";
                        var clase = "";
                        if (response["RESPUESTA"] == "OK") {
                            $("#listar").load("/Test/Listar");
                            mensaje = "<strong>¡Exito!</strong> Test registrado con exito.";
                            clase = "alert-success";

                        } else if (response["RESPUESTA"] == "ERROR") {
                            mensaje = "<strong>¡Error!</strong> " + response["MENSAJE"];
                            clase = "alert-danger";
                        }
                        else if (response["RESPUESTA"] == "LOGIN") {
                            mensaje = "<strong>¡Error!</strong>  Debe iniciar sesión";
                            clase = " alert-danger";

                            location.href = "/";
                        }
                        //alert_mensajes() esta en helper.js
                        $("#alert_1").html(alert_mensajes(mensaje, clase));

                    }, error: function (error) {
                        alert("Error");
                        btn.val("Guardar");
                        btn.prop("disabled", false);
                    }
                });
            }
        });
    });
   

</script>


